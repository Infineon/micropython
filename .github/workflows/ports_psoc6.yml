name: psoc6 port

on:
  push:
  pull_request:
    paths:
      - '.github/workflows/ports_psoc6.yml'
      - 'tools/**'
      - 'py/**'
      - 'extmod/**'
      - 'lib/**'
      - 'ports/psoc6/**'


jobs:
  server-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        board: [CY8CPROTO-062-4343W]
    outputs:
      commit_sha: ${{ steps.commit_sha.outputs.sha_short }}
    steps:
      - uses: actions/checkout@v2
      - name: Install packages
        run: source tools/ci.sh && ci_psoc6_setup
      - name: Build
        run: source tools/ci.sh && ci_psoc6_build ${{ matrix.board }}
      - name: Gets commit SHA
        id: commit_sha
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Save firmware bin
        if: success()
        uses: actions/upload-artifact@v3
        with: 
          name: mpy-psoc6_${{ matrix.board }}_${{ steps.commit_sha.outputs.sha_short }}
          path: ports/psoc6/build/firmware.hex

  on-target-test:
    runs-on: self-hosted
    needs: server-build
    strategy:
      matrix:
        board: [CY8CPROTO-062-4343W]
    steps:
    - uses: actions/checkout@v2
    - name: Download binaries
      uses: actions/download-artifact@v3
    - name: Display downloaded binaries
      run: ls mpy-psoc6_${{ matrix.board }}_${{ server-build.outputs.commit_sha }}
    - name: Setup tools
      run: if [ ! -d "openocd" ]; then source tools/psoc6/mpy-psoc6.sh && openocd_download_install; fi
    - name: Deploy firmware
      run:  export PATH=${PWD}/openocd/bin:$PATH && source tools/psoc6/mpy-psoc6.sh && mpy_firmware_deploy ${{ matrix.board }} mpy-psoc6_${{ matrix.board }}_${{ server-build.outputs.commit_sha }}/firmware.hex
    - name: Run tests
      run: cd ../../tests && ./run-tests.py --target psoc6 --device /dev/ttyACM0 -d psoc6

  # release:
  #   needs: hil-on-target-tests
  #   if: startsWith(github.ref, 'refs/tags/v')
  #   steps:
  #   - name: Prepare release assets
  #     if: startsWith(github.ref, 'refs/tags/v') 
  #     run: echo ${{ secrets.SELF_HOSTED_PASSWORD }} | sudo -S cp ports/psoc6/build/firmware.hex ports/psoc6/build/micropython-psoc6-${{  github.ref_name  }}.hex
  #   - name: Build release changelog
  #     id: build_changelog
  #     uses: mikepenz/release-changelog-builder-action@v3
  #     if: startsWith(github.ref, 'refs/tags/v') 
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #   - name: Release
  #     uses: softprops/action-gh-release@v1
  #     if: startsWith(github.ref, 'refs/tags/v')
  #     with:
  #       name: Micropython PSoC6 ${{  github.ref_name  }}
  #       files: ports/psoc6/build/micropython-psoc6-${{  github.ref_name  }}.hex
  #       body: ${{steps.build_changelog.outputs.changelog}}
